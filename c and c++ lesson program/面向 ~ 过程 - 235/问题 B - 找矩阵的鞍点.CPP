/*
题目描述
在一个二维矩阵中，如果某个位置的数值是该行最大值，
同时也是该列最小值，我们则称该位置是矩阵的鞍点。
鞍点可能有多个，也可能没有。
请编写程序找出一个3*3矩阵的鞍点。

输入
第一行：输入T表示有T个测试实例
第二行：输入3*3矩阵数据，假定数据都是正整数
以此类推输入下个实例

输出
输出鞍点所在的行号、列号、鞍点值
如果鞍点不存在则输出-1

设定行号和列号是从0开始编号，无需考虑存在多个鞍点的情况，
假设如果有鞍点则只有唯一个

样例输入
2
11 77 33
44 66 55
22 88 99
22 11 90
33 44 10
55 66 70
样例输出
1 1 66
-1
*/
# include <stdio.h>
int ad( int a[3][3] )
{
	int i,tg = 0;
	for ( i = 0 ; i < 3 ; i ++ )
	{
		if ( a[i][0] > a[i][1] &&  a[i][0] > a[i][2] )
		{
			if ( a[i][0] < a[(i+1)%3][0] &&  a[i][0] < a[(i+2)%3][0] )
			{
				printf("%d %d %d\n",i,0,a[i][0]);
				tg++;
			}
			
		}
		else if ( a[i][1] > a[i][0] &&  a[i][1] > a[i][2] )
		{
			if ( a[i][1] < a[(i+1)%3][1] &&  a[i][1] < a[(i+2)%3][1] )
			{
				printf("%d %d %d\n",i,1,a[i][1]);
				tg++;
			}
			
		}
		else if ( a[i][2] > a[i][0] &&  a[i][2] > a[i][1] )
		{
			if ( a[i][2] < a[(i+1)%3][2] &&  a[i][2] < a[(i+2)%3][2] )
			{
				printf("%d %d %d\n",i,2,a[i][2]);
				tg++;
			}
		}

	}
	if ( tg == 0 )
		printf("-1\n");
	return 1;
}
int main()
{
	int i,j,t,a[3][3];
	scanf("%d",&t);
	while ( t-- )
	{
		for ( i = 0 ; i < 3 ; i ++ )
			for ( j = 0 ; j < 3 ; j ++ )
				scanf("%d",&a[i][j]);
		ad(a);
	}
	return 0;
}