/*
Problem F: 分类排序(20分)
Description
从键盘输入10个整数（10个整数均不相同）， 然后再从键盘中输入一个整数a，
	（1st）.如果该整数a为奇数， 且与这10个整数中的任一个数相同，则删掉与a相同的这个数，并将剩下的9个数按升序排序输出；
	（2nd）.若a为偶数， 且与这10个数都【不同】，则加入a，并将这11个数降序排序输出；
	（3rh）.【否则】，则将这10个数奇数在前，偶数在后， 降序排列输出。
	
	例如，10个数分别为			   6，89，34，12， 0，|-8，78，15， 9， 3. |
	若a为9（1st），		则输出为：-8， 0， 3， 6，12，|15，34，78，89.	   |
	若a为2（3rd），		则输出为：89，78，34，15，12，| 9， 6， 3， 2， 0，|-8.
	若a为7或12（2nd）， 则输出为：89，15， 9， 3，78，|34，12， 6， 0，-8. |

Input
测试数据的组数n 第一组测试数据的10个整数 第一组输入的整数a


第二组测试数据的10个整数 第二组输入的整数a


......


第n组测试数据的10个整数 第n组的整数a

Output
第一组数据排序输出


第二组数据排序输出


......


第n组数据排序输出

Sample Input
3

6 89 34 12 0 -8 78 15 9 3。。。。。。(1st)奇数。
9

6 89 34 12 0 -8 78 15 9 3。。。。。。(2nd)偶数。不存在相同。插入，降序输出。
2

6 89 34 12 0 -8 78 15 9 3。。。。。。(3rd)降序：先奇数后偶数。
7


3 6 89 34 12 0 -8 78 15 9 3 9 6 89 34 12 0 -8 78 15 9 3 2 6 89 34 12 0 -8 78 15 9 3 7

Sample Output
-8 0 3 6 12 15 34 78 89		。。。。。。(1st)奇数。

89 78 34 15 12 9 6 3 2 0 -8 。。。。。。(2nd)偶数。不存在相同。插入，降序输出。

89 15 9 3 78 34 12 6 0 -8	。。。。。。(3rd)降序：先奇数后偶数。

  */
# include <iostream>
# include <algorithm>//sort(升序),reverse(降序)
using namespace std; 
int main() 
{ 
    int x[12],a,n,i,j,tr,k; 
    cin>>n; 
    while ( n-- ) 
    { 
        tr = 0; 
        for ( i = 0 ; i < 10 ; i++ ) 
            cin>>x[i]; 
        cin>>a; 
		sort( x , x+10 );//升序
        for ( i = 0 ; i < 10 ; i++ ) 
        { 
            if ( x[i] == a ) 
            { 
                tr++; 
                k = i; 
                break; 
            } 
        } 
		/*+++++++++++++++++++++++++++++++(1st)奇数（开头）+++++++++++++++++++++++++++++++*/ 
        if ( tr && a %2 )
        { 
			cout<<endl<<endl<<"+++++++++++++++++分割符(1st)+++++++++++++++++"<<endl;
            for ( i = 0 ; i < 10 ; i++ ) 
				if ( i != k ) 
					cout<<x[i]<<' '; 
			cout<<endl<<"+++++++++++++++++分割符(1st)+++++++++++++++++"<<endl;
        } 
		/*+++++++++++++++++++++++++++++++(1st)奇数（结尾）+++++++++++++++++++++++++++++++*/ 
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		/*<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<偶数>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>*/ 
        else if ( a %2 == 0 )
        {   
			sort( x , x+10 );
            int tg = 0; 
            for ( i = 0 ; i < 10 ; i++ ) 
            { 
                if ( x[i] == a ) 
                { 
                    tg++; 
                    break; 
                } 
            } 
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            if ( !tg )//不存在相同。插入，降序输出。
            { 	
				/*---------------------------------(2nd)（开头）---------------------------------*/
				cout<<endl<<endl<<"-----------------分割符(2nd)-----------------"<<endl;
				x[10] = a;
				sort( x , x+11 );
				reverse( x , x+11 );
				for ( i = 0 ; i < 11 ; i++ ) 
                    cout<<x[i]<<' '; 
				cout<<endl<<"-----------------分割符(2nd)-----------------"<<endl;
				/*---------------------------------(2nd)（结尾）---------------------------------*/
            } 
		}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
       else//降序：先奇数后偶数。
       { 
		/*=================================(3rd)（开头）=================================*/
		cout<<endl<<endl<<"=================分割符(3rd)================="<<endl;
		reverse( x , x+10 );
        for ( i = 0 ; i < 10 ; i++ ) 
			if ( x[i] %2 == 1 )
				cout<<x[i]<<' '; 
        for ( i = 0 ; i < 10 ; i++ ) 
			if ( x[i] %2 == 0 )
				cout<<x[i]<<' '; 
		cout<<endl<<"=================分割符(3rd)================="<<endl;

		/*=================================(3rd)（开头）=================================*/
       }   
    } 
    return 0; 
}
/*
3 6 89 34 12 0 -8 78 15 9 3 9 6 89 34 12 0 -8 78 15 9 3 2 6 89 34 12 0 -8 78 15 9 3 7

  */

